const { MongoClient } = require('mongodb');

// Images attractives pour la r√©paration PC
const pcRepairImages = {
  // Diagnostic et D√©pannage
  'Diagnostic Complet': 'https://images.unsplash.com/photo-1518717758536-85ae29035b6d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',

  // R√©paration d'√©cran
  'R√©paration √âcran': 'https://images.unsplash.com/photo-1593640408182-31c70c8268f5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',

  // Remplacement carte m√®re
  'Remplacement Carte M√®re': 'https://images.unsplash.com/photo-1591488320449-011701bb6704?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',

  // R√©cup√©ration de donn√©es
  'R√©cup√©ration de Donn√©es': 'https://images.unsplash.com/photo-1558494949-ef010cbdcc31?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',

  // Maintenance g√©n√©rale
  'Maintenance': 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',

  // R√©paration laptop
  'R√©paration Laptop': 'https://images.unsplash.com/photo-1496181133206-80ce9b88a853?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',

  // Images par d√©faut pour diff√©rents types
  'default_laptop': 'https://images.unsplash.com/photo-1496181133206-80ce9b88a853?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
  'default_desktop': 'https://images.unsplash.com/photo-1587202372634-32705e3f87f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
  'default_motherboard': 'https://images.unsplash.com/photo-1591488320449-011701bb6704?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
  'default_screen': 'https://images.unsplash.com/photo-1593640408182-31c70c8268f5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
  'default_data': 'https://images.unsplash.com/photo-1558494949-ef010cbdcc31?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
  'default_repair': 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80'
};

// Fonction pour obtenir une image appropri√©e
function getAppropriateImage(title, description) {
  const titleLower = title.toLowerCase();
  const descLower = description.toLowerCase();

  // Correspondances exactes
  if (pcRepairImages[title]) {
    return pcRepairImages[title];
  }

  // Correspondances par mots-cl√©s
  if (titleLower.includes('√©cran') || titleLower.includes('screen') || descLower.includes('√©cran')) {
    return pcRepairImages['default_screen'];
  }

  if (titleLower.includes('laptop') || titleLower.includes('portable') || descLower.includes('laptop')) {
    return pcRepairImages['default_laptop'];
  }

  if (titleLower.includes('carte m√®re') || titleLower.includes('motherboard') || descLower.includes('carte m√®re')) {
    return pcRepairImages['default_motherboard'];
  }

  if (titleLower.includes('donn√©es') || titleLower.includes('data') || descLower.includes('donn√©es')) {
    return pcRepairImages['default_data'];
  }

  if (titleLower.includes('diagnostic') || titleLower.includes('d√©pannage') || descLower.includes('diagnostic')) {
    return pcRepairImages['Diagnostic Complet'];
  }

  // Image par d√©faut
  return pcRepairImages['default_repair'];
}

async function updateServiceImages() {
  const client = new MongoClient('mongodb://admin:password123@localhost:27018/repair_pc?authSource=admin');

  try {
    await client.connect();
    console.log('‚úÖ Connexion √† MongoDB r√©ussie');

    const db = client.db('repair_pc');
    const servicesCollection = db.collection('services');

    // R√©cup√©rer tous les services
    const services = await servicesCollection.find({}).toArray();
    console.log(`üìã ${services.length} services trouv√©s`);

    let updatedCount = 0;

    for (const service of services) {
      const newImage = getAppropriateImage(service.titre, service.description);

      if (service.image !== newImage) {
        await servicesCollection.updateOne(
          { _id: service._id },
          { $set: { image: newImage } }
        );

        console.log(`üñºÔ∏è  Image mise √† jour pour "${service.titre}"`);
        console.log(`   Ancienne: ${service.image}`);
        console.log(`   Nouvelle: ${newImage}`);

        updatedCount++;
      }
    }

    console.log(`\n‚ú® Mise √† jour termin√©e: ${updatedCount} services mis √† jour`);

    // Afficher le r√©sum√© des services avec leurs nouvelles images
    console.log('\nüì∏ R√©sum√© des images des services:');
    const updatedServices = await servicesCollection.find({}).toArray();
    updatedServices.forEach((service, index) => {
      console.log(`${index + 1}. ${service.titre}`);
      console.log(`   Image: ${service.image}`);
      console.log(`   Prix: ${service.prix}‚Ç¨ - Dur√©e: ${service.duree}`);
      console.log();
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de la mise √† jour:', error);
  } finally {
    await client.close();
    console.log('üîå Connexion ferm√©e');
  }
}

// Ex√©cuter le script
updateServiceImages();